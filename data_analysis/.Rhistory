ls ()
str(WL.LPP.bugs.sp13)
plot(tany ~ samp, data = WL.LPP.bugs.sp13)
plot(tany ~ as.factor(samp), data = WL.LPP.bugs.sp13)
plot(tany ~ chiro)
plot(tany ~ depth)
depth
points(chiro ~ depth, col = 4)
plot(tany ~ depth, ylim=c(0, 5000))
plot(tany ~ depth)
plot(tany ~ depth, ylim=c(0, 6000))
points(chiro ~ depth, col = 4)
points(chaob ~ depth, col = 2)
points(cerat ~ depth, col = 3)
plot(sum(cerat, tany, chiro, chaob) ~ as.factor(samp))
plot(sum(cerat, tany, chiro, chaob) ~ as.factor(samp), data = WL.LPP.bugs.sp13)
cerat + tany + chiro + chaob
plot(bugs ~ samp, data = WL.LPP.bugs.sp13)
plot(bugs ~ as.factor(samp), data = WL.LPP.bugs.sp13)
plot(bugs ~ as.factor(samp), data = WL.LPP.bugs.sp13)
ls()
om <- read.delim("./data/WL_LPP_OM_sp13.txt", header = T, sep = " ")
om
bug <- WL.LPP.bugs.sp13
ls ()
bug
plot(bug$bugs ~ om$CPOM)
plot(bug$bugs[bug$lake == "WL"] ~ om$CPOM[om$lake == "WL"])
plot(bug$bugs[bug$lake == "WL"] ~ om$OM[om$lake == "WL"])
str(om)
plot(bug$bugs[bug$lake == "WL"] ~ om$perc.OM[om$lake == "WL"])
q()
n
getwd()
bug <- read.delim("./data/WL_LPP_bugs_sp13.txt", header = T, sep = " ")
bug
q()
n
DP.CPOM
DP.CPOM
plot(CPOM ~ as.factor(site), data = DP.CPOM)
WLLPP <- read.delim("./data/WL_LPP_OM_sp13.txt", stringsAsFactors = F, header = T)
str(WLLPP)
WLLPP <- read.delim("./data/WL_LPP_OM_sp13.txt", stringsAsFactors = F, header = T, sep = " ")
str(WLLPP)
plot(CPOM ~ as.factor(samp), data = WLLPP)
plot(CPOM ~ as.factor(samp), data = WLLPP, subset = lake == "WL")
plot(CPOM ~ as.factor(site), data = DP.CPOM, add = T, col = 2)
plot(CPOM ~ as.factor(samp), data = WLLPP, subset = lake == "WL", ylim = c(0, 50))
plot(CPOM ~ as.factor(site), data = DP.CPOM, add = T, col = 2)
plot(CPOM ~ as.factor(site), data = DP.CPOM, add = F, col = 2)
plot(CPOM ~ as.factor(samp), data = WLLPP, subset = lake == "WL", ylim = c(0, 100))
plot(CPOM ~ as.factor(site), data = DP.CPOM, add = T, col = 2)
plot(CPOM ~ as.factor(samp), data = WLLPP, subset = lake == "LPP", ylim = c(0, 2000))
plot(log(CPOM) ~ as.factor(samp), data = WLLPP, subset = lake == "LPP")
plot(log(CPOM) ~ as.factor(site), data = DP.CPOM, add = T, col = 2)
plot(log(CPOM) ~ as.factor(samp), data = WLLPP, subset = lake == "LPP", ylim = c(0, 10))
plot(log(CPOM) ~ as.factor(site), data = DP.CPOM, add = T, col = 2)
plot(log(CPOM) ~ as.factor(samp), data = WLLPP, subset = lake == "WL", add = T, col = 4)
DP.CPOM
str(DP.CPOM)
str(DP.CPOM)
plot(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "open")
DP.CPOM
plot(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "lit")
plot(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "open", ylim = c(0, 100))
plot(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "lit", add = T, col = 5)
summary(lm((CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "open")))
summary(lm(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "open"))
summary(lm(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "lit"))
?write.table
DP.CPOM
ls ()
WCP.CPOM
DP.CPOM
dish.bag.OM
WCP.CPOM
DP.CPOM
ls()
WLLPP
getwd()
rm(list = ls())
ls ()
ls9)
ls()
ls()
str(WL.LPP.CPOM)
?merge
ls()
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM)
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, all = T)
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by = (lake, CPOM), all = T)
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by = "CPOM", all = T)
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by.x = "CPOM")
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by = "CPOM")
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by = 1)
merge(WL.LPP.CPOM, DP.CPOM, WCP.CPOM, by = "lake")
str(WL.LPP.CPOM)
str(DP.CPOM)
merge(WL.LPP.CPOM, DP.CPOM, by = "lake")
junk <- merge(DP.CPOM, WCP.CPOM, by = "lake")
junk
junk <- merge(DP.CPOM, WCP.CPOM, by = c("lake", "CPOM"))
junk
str(junk)
ls()
rm(junk)
ls()
DP.CPOM[1, ]
DP.CPOM[-1, 1]
DP.CPOM[,1]
junk <- DP.CPOM[ , c(1, 2)]
junk
rm (junk)
ls()
str(DP.CPOM)
names(DP.CPOM)
names(WL.LPP.CPOM)
pond.CPOM
pond.CPOM <- rbind(WL.LPP.CPOM.trunk, DP.CPOM.trunk[-1, ], WCP.CPOM.trunk[-1, ])
pond.CPOM
anova(lm(CPOM ~ lake * site, data = pond.CPOM)

str(pond.CPOM)
plot(lm(CPOM ~ as.factor(lake) * as.factor(samp), data = pond.CPOM))
plot(CPOM ~ as.factor(lake), data = pond.CPOM, subset = samp == "open")
ls()
str(DP.CPOM)
str(DP.CPOM)
q()
n
ls()
rm(list = ls())
ls()
DP.CPOM
DP.CPOM
ls()
str(WL.LPP.LOI.sp13)
WL.LPP.LOI.sp13$lake
WL.LPP.OM.sp13
plot(CPOM ~ sa, data = WL.LPP.OM.sp13)
ls()
points(CPOM ~ sa, data = DP.CPOM, col = 2)
points(CPOM ~ sa, data = WCP.CPOM, col = 3)
plot(CPOM ~ sa, data = WL.LPP.OM.sp13, subset = lake == "LPP")
points(CPOM ~ sa, data = WCP.CPOM, col = 3)
points(CPOM ~ sa, data = DP.CPOM, col = 2)
plot(CPOM ~ sa, data = WL.LPP.OM.sp13, subset = lake == "LPP", xlim = c(0, 6000))
points(CPOM ~ sa, data = DP.CPOM, col = 2)
points(CPOM ~ sa, data = WCP.CPOM, col = 3)
rm(list = ls())
ls()
str(DP.CPOM)
str(WCP.CPOM)
WCP.CPOM
rm(list = ls())
str(WCP.CPOM)
rm(list ls())
rm(list = ls())
str(WCP.CPOM)
str(WL.LPP.CPOM)
str(DP.CPOM)
names(DP.CPOM)
names(WL.LPP.CPOM)
pond.CPOM
)
plot(site, depth, data = pond.CPOM)
plot(site, depth, data = pond.CPOM)  ^C ^C
plot(site, depth, data = pond.CPOM)
plot(samp, depth, data = pond.CPOM)
names(pond.CPOM)
plot(samp, depth, data = pond.CPOM)
plot(depth ~ as.factor(samp), data = pond.CPOM)
anova(lm(depth ~ as.factor(samp), data = pond.CPOM))
plot(CPOM ~ sa, data = pond.CPOM)
plot(CPOM ~ sa, data = pond.CPOM, subset = lake != "WL")
plot(log(CPOM) ~ log(sa), data = pond.CPOM)
summary(lm(log(CPOM) ~ log(sa), data = pond.CPOM))
)
pond.CPOM$sa
summary(lm(CPOM ~ sa, data = pond.CPOM))
plot(CPOM ~ sa, data = pond.CPOM)
plot(log10(CPOM) ~ log10(sa), data = pond.CPOM)
summary(lm((log10(CPOM) ~ log10(sa), data = pond.CPOM))
summary(lm((log10(CPOM) ~ log10(sa), data = pond.CPOM)))
summary(lm(log10(CPOM) ~ log10(sa), data = pond.CPOM))
summary(lm(log10(CPOM) ~ log10(depth), data = pond.CPOM))
plot(log10(CPOM) ~ log10(depth), data = pond.CPOM)
plot(CPOM ~ as.factor(site), data = pond.CPOM)
plot(CPOM ~ as.factor(samp), data = pond.CPOM)
rm(list = ls())
rm(list = ls())
q()
n
ls()
str(DP.CPOM <- 
)
str(DP.CPOM)
DP.tot.lit.CPOM
xb
DP.tot.open.CPOM
DP.tot.CPOM
WCP.tot.CPOM
ls()
WL.tot.lit.CPOM
WL.tot.CPOM
WL.tot.CPOM/10000
WL.tot.CPOM
WL.tot.CPOM/10000
LPP.tot.CPOM
DP.tot.CPOM
DP.tot.CPOM/10000
WCP.tot.CPOM/10000
WCP.tot.CPOM/1000000
WCP.tot.CPOM/1000
DP.tot.CPOM/1000
WCP.tot.CPOM/1000
LPP.tot.CPOM/1000
WL.tot.CPOM/1000
q()
n
str(DP.CPOM)
plot(DP.CPOM$site, DP.CPOM$CPOM)
plot(DP.CPOM$CPOM)
plot(DP.CPOM$CPOM[DP.CPOM$samp == "lit"])
plot(sort(DP.CPOM$CPOM[DP.CPOM$samp == "lit"]))
points(sort(DP.CPOM$CPOM[DP.CPOM$samp == "open"]), col = 2)
plot(sort(DP.CPOM$CPOM[DP.CPOM$samp == "lit"]))
plot(as.factor(DP.CPOM$site), DP.CPOM$CPOM)
plot(as.number(DP.CPOM$site), DP.CPOM$CPOM)
plot(as.int(DP.CPOM$site), DP.CPOM$CPOM)
plot(as.integer(DP.CPOM$site), DP.CPOM$CPOM)
require(ggplot2)
load(ggplot2)
library(ggplot2)
plot(CPOM ~ site)
plot(CPOM ~ site, data = DP.CPOM, subset = samp == "lit")
plot(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "lit")
points(CPOM ~ as.factor(site), data = DP.CPOM, subset = samp == "lit", col = 3, pch = 16)
?axis
q()
n
